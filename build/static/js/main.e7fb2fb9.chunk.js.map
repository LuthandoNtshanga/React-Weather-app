{"version":3,"sources":["components/WeatherSearch.js","components/WeatherDisplay.js","components/Dailyforecast.js","components/Hourlyforecast.js","App.js","index.js"],"names":["WeatherSearch","_ref","onSearch","city","setCity","useState","React","createElement","onSubmit","e","preventDefault","className","type","value","onChange","target","placeholder","FaSearch","WeatherDisplay","weather","name","src","icon","alt","description","WiThermometer","Math","round","main","temp","WiHumidity","humidity","WiStrongWind","wind","speed","pressure","TbUvIndex","getWeatherIcon","condition","WiDaySunny","WiRain","WiSnow","WiCloudy","WiDayCloudy","DailyForecast","forecast","length","map","day","index","key","Date","dt","toLocaleDateString","weekday","HourlyForecast","hour","toLocaleTimeString","getBackgroundImage","weatherCondition","conditions","Clear","Clouds","Rain","Snow","Thunderstorm","Drizzle","Mist","App","setWeather","setForecast","showMore","setShowMore","API_KEY","backgroundStyle","backgroundImage","style","async","currentWeather","axios","get","data","forecastData","list","error","console","onClick","toggleShowMore","forecastList","dailyData","forEach","item","date","toDateString","Object","values","getDailyForecast","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7fb2fb9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nfunction WeatherSearch({ onSearch }) {\r\n  const [city, setCity] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSearch(city);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"weather-search\">\r\n      <input\r\n        type=\"text\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n        placeholder=\"Enter city name\"\r\n        className=\"search-input\"\r\n      />\r\n      <button type=\"submit\" className=\"search-button\">\r\n        <FaSearch />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default WeatherSearch;","import React from 'react';\r\nimport { WiThermometer, WiHumidity, WiStrongWind } from 'react-icons/wi';\r\nimport { TbUvIndex } from 'react-icons/tb';\r\n\r\nfunction WeatherDisplay({ weather }) {\r\n  if (!weather) return null;\r\n\r\n  return (\r\n    <div className=\"weather-display\">\r\n      <h2>{weather.name}</h2>\r\n      <div className=\"weather-icon\">\r\n        <img \r\n          src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} \r\n          alt={weather.weather[0].description}\r\n        />\r\n      </div>\r\n      <div className=\"weather-details\">\r\n        <p><WiThermometer /> {Math.round(weather.main.temp)}°C</p>\r\n        <p><WiHumidity /> {weather.main.humidity}%</p>\r\n        <p><WiStrongWind /> {Math.round(weather.wind.speed)} m/s</p>\r\n        {weather.main.pressure && <p><TbUvIndex /> {weather.main.pressure} hPa</p>}\r\n      </div>\r\n      <p className=\"weather-description\">{weather.weather[0].description}</p>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default WeatherDisplay;\r\n\r\n","import React from 'react';\r\nimport { WiDaySunny, WiRain, WiSnow, WiCloudy, WiDayCloudy } from 'react-icons/wi';\r\n\r\nconst getWeatherIcon = (condition) => {\r\n  switch (condition) {\r\n    case 'Clear': return <WiDaySunny />;\r\n    case 'Rain': return <WiRain />;\r\n    case 'Snow': return <WiSnow />;\r\n    case 'Clouds': return <WiCloudy />;\r\n    default: return <WiDayCloudy />;\r\n  }\r\n};\r\n\r\nfunction DailyForecast({ forecast }) {\r\n  if (!forecast || forecast.length === 0) {\r\n    return <div>No daily forecast data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"daily-forecast\">\r\n      <h3 className='heading'>5-Day Forecast</h3>\r\n      <div className=\"forecast-container\">\r\n        {forecast.map((day, index) => (\r\n          <div key={index} className=\"forecast-item\">\r\n            <p>{new Date(day.dt * 1000).toLocaleDateString('en-US', { weekday: 'short' })}</p>\r\n            {getWeatherIcon(day.weather[0].main)}\r\n            <p>{Math.round(day.main.temp)}°C</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DailyForecast;","import React from 'react';\r\nimport { WiDaySunny, WiRain, WiSnow, WiCloudy, WiDayCloudy } from 'react-icons/wi';\r\n\r\nconst getWeatherIcon = (condition) => {\r\n  switch (condition) {\r\n    case 'Clear': return <WiDaySunny />;\r\n    case 'Rain': return <WiRain />;\r\n    case 'Snow': return <WiSnow />;\r\n    case 'Clouds': return <WiCloudy />;\r\n    default: return <WiDayCloudy />;\r\n  }\r\n};\r\n\r\nfunction HourlyForecast({ forecast }) {\r\n  if (!forecast || forecast.length === 0) {\r\n    return <div>No hourly forecast data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"hourly-forecast\">\r\n      <h3 className='heading'>Hourly Forecast</h3>\r\n      <div className=\"forecast-container\">\r\n        {forecast.map((hour, index) => (\r\n          <div key={index} className=\"forecast-item\">\r\n            <p>{new Date(hour.dt * 1000).toLocaleTimeString('en-US', { hour: 'numeric' })}</p>\r\n            {getWeatherIcon(hour.weather[0].main)}\r\n            <p>{Math.round(hour.main.temp)}°C</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HourlyForecast;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport WeatherSearch from './components/WeatherSearch';\r\nimport WeatherDisplay from './components/WeatherDisplay';\r\nimport DailyForecast from './components/Dailyforecast';\r\nimport HourlyForecast from './components/Hourlyforecast';\r\nimport './App.css';\r\n\r\n// Define getBackgroundImage function outside of App component\r\nfunction getBackgroundImage(weatherCondition) {\r\n  const conditions = {\r\n    Clear: 'url(\"https://images.unsplash.com/photo-1601297183305-6df142704ea2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1974&q=80\")',\r\n    Clouds: 'url(\"https://images.unsplash.com/photo-1534088568595-a066f410bcda?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1951&q=80\")',\r\n    Rain: 'url(\"https://images.unsplash.com/photo-1519692933481-e162a57d6721?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\")',\r\n    Snow: 'url(\"https://images.unsplash.com/photo-1516431883744-f077ead1002b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\")',\r\n    Thunderstorm: 'url(\"https://images.unsplash.com/photo-1605727216801-e27ce1d0cc28?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2071&q=80\")',\r\n    Drizzle: 'url(\"https://images.unsplash.com/photo-1541919939460-a6b0e349dfae?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1974&q=80\")',\r\n    Mist: 'url(\"https://images.unsplash.com/photo-1487621167305-5d248087c724?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1932&q=80\")',\r\n  };\r\n  return conditions[weatherCondition] || conditions.Clear; // Default to Clear if condition not found\r\n}\r\n\r\nfunction App() {\r\n  const [weather, setWeather] = useState(null);\r\n  const [forecast, setForecast] = useState(null);\r\n  const [showMore, setShowMore] = useState(false);\r\n  const API_KEY = '7eadbb24f35c4713e6cc3632fe342b51';\r\n\r\n  const searchWeather = async (city) => {\r\n    try {\r\n      const currentWeather = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n      );\r\n      setWeather(currentWeather.data);\r\n\r\n      const forecastData = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\r\n      );\r\n      setForecast(forecastData.data.list); // Store the list of forecast data\r\n    } catch (error) {\r\n      console.error('Error fetching weather data:', error);\r\n      setWeather(null);\r\n      setForecast(null);\r\n    }\r\n  };\r\n\r\n  const toggleShowMore = () => {\r\n    setShowMore(!showMore);\r\n  };\r\n\r\n  const backgroundStyle = weather\r\n    ? { backgroundImage: getBackgroundImage(weather.weather[0].main) }\r\n    : {};\r\n\r\n  // Function to process forecast data for daily view\r\n  const getDailyForecast = (forecastList) => {\r\n    const dailyData = {};\r\n    forecastList.forEach(item => {\r\n      const date = new Date(item.dt * 1000).toDateString();\r\n      if (!dailyData[date] || item.main.temp > dailyData[date].main.temp) {\r\n        dailyData[date] = item;\r\n      }\r\n    });\r\n    return Object.values(dailyData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={backgroundStyle}>\r\n      <h1>Weather App</h1>\r\n      <WeatherSearch onSearch={searchWeather} />\r\n      {weather && <WeatherDisplay weather={weather} />}\r\n      {forecast && (\r\n        <div>\r\n          <button onClick={toggleShowMore} className=\"toggle-button\">\r\n            {showMore ? 'Hide Details' : 'Show More'}\r\n          </button>\r\n          {showMore && (\r\n            <div className=\"forecast-wrapper\">\r\n              <DailyForecast forecast={getDailyForecast(forecast)} />\r\n              <HourlyForecast forecast={forecast.slice(0, 8)} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}